model:
  architecture:
    encoder: googlenet
    decoder: linear
  features:
    in_channels: 1
    number_classes: 10

algorithm:
  name: train
  device: cuda
  epochs: 20
  seed: 42

dataset:
  name: mnist
  batch_size: 16
  sizes:
    train_size: 0.05
    valid_size: 0.01
    test_size: 0.01
  transform: ./transform.yaml

save:
  logs:
    path: ./logs
  checkpoints:
    path: ./checkpoints
    save_every: 5

optimizer:
  name: radam
  params:
    learning_rate: 0.01
    weight_decay: 0.0001

scheduler:
  name: polylr
  params:
    max_decay_steps: 20
    power: 0.9
    end_lr: 0.0005

loss_function: ce
metrics: ["precision", "recall", "f1_score"]

wandb:
  project_name: OpenNN
  run_name: cuda-run
  metrics: ["precision", "recall"]
